// file: server/index.ts (excerpt for email initialization)
import express, { type Request, Response, NextFunction } from "express";
import { registerRoutes } from "./routes";
import { setupVite, serveStatic, log } from "./vite";
import { initializeDatabase } from "./db";
import session from "express-session";
import path from "path";
import fs from "fs";
import { storage } from "./storage";
import { updateMailgunService } from "./direct-mailgun"; // Use our direct implementation

// ...rest of the file remains the same until the email service initialization...

(async () => {
  // Initialize the database
  try {
    log('Initializing database...');
    await initializeDatabase();
    log('Database initialization completed.');
    
    // Initialize direct mailgun service with settings from the database
    try {
      log('Initializing direct mailgun service...');
      const emailSettings = await storage.getEmailSettings();
      if (emailSettings) {
        // Log the settings we retrieved (without exposing API key)
        log(`Email settings found: domain=${emailSettings.domain}, fromEmail=${emailSettings.fromEmail}, isEnabled=${emailSettings.isEnabled}, hasApiKey=${!!emailSettings.apiKey}`);
        
        // Update direct mailgun service with retrieved settings
        const updatedService = updateMailgunService(emailSettings);
        
        // Check if direct mailgun service is properly configured
        const isConfigured = updatedService.isConfigured();
        log(`Direct mailgun service initialized and ${isConfigured ? 'properly configured' : 'not fully configured'}.`);
        
        if (!isConfigured) {
          log('Warning: Direct mailgun service is not fully configured, emails will not be sent.');
        }
      } else {
        log('No email settings found in database. Direct mailgun service will use default configuration.');
      }
    } catch (emailError) {
      log(`Direct mailgun service initialization failed: ${emailError instanceof Error ? emailError.message : 'Unknown error'}`);
      // Continue application startup even if email service fails
    }
  } catch (error) {
    log(`Database initialization failed: ${error instanceof Error ? error.message : 'Unknown error'}`);
  }

  // ...rest of the file remains unchanged...
})();